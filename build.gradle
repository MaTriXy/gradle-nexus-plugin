plugins {
    id 'com.gradle.build-scan' version '1.16'
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
}

buildScan {
    termsOfServiceUrl   = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

def compatibilityVersion = 1.6
sourceCompatibility = compatibilityVersion
targetCompatibility = compatibilityVersion
group = 'com.bmuschko'
version = '2.3.1'

repositories {
    jcenter()
}

dependencies {
    testImplementation('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
}

sourceSets {
    integrationTest {
        groovy.srcDir file('src/integTest/groovy')
        resources.srcDir file('src/integTest/resources')
        compileClasspath = sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath = output + compileClasspath
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
}

check.dependsOn integrationTest

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Sonatype Nexus plugin',
                   'Implementation-Version': version,
                   'Built-By': System.getProperty('user.name'),
                   'Built-Date': new Date(),
                   'Built-JDK': System.getProperty('java.version'),
                   'Built-Gradle': gradle.gradleVersion
    }
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task groovydocJar(type: Jar) {
    dependsOn groovydoc
    classifier 'groovydoc'
    from groovydoc.destinationDir
}

task javadocJar(type: Jar) {
    dependsOn javadoc
    classifier 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact groovydocJar
            artifact javadocJar

            pom {
                name = 'Gradle Sonatype Nexus plugin'
                description = 'Gradle plugin for configuring and upload artifacts to Sonatype Nexus.'
                url = 'https://github.com/bmuschko/gradle-nexus-plugin'
                inceptionYear = '2012'

                scm {
                    url = 'https://github.com/bmuschko/gradle-nexus-plugin'
                    connection = 'scm:https://bmuschko@github.com/bmuschko/gradle-nexus-plugin.git'
                    developerConnection = 'scm:git://github.com/bmuschko/gradle-nexus-plugin.git'
                }

                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'bmuschko'
                        name = 'Benjamin Muschko'
                        email = 'benjamin.muschko@gmail.com'
                    }
                }
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.getProperty('bintrayUser') : null
    key =  project.hasProperty('bintrayKey') ? project.getProperty('bintrayKey') : null
    publications = ['mavenJava']

    pkg {
        repo = 'gradle-plugins'
        name = 'com.bmuschko:gradle-nexus-plugin'
        desc = 'Gradle plugin for configuring and uploading artifacts to Sonatype Nexus.'
        websiteUrl = "https://github.com/bmuschko/${project.name}"
        issueTrackerUrl = "https://github.com/bmuschko/${project.name}/issues"
        vcsUrl = "https://github.com/bmuschko/${project.name}.git"
        licenses = ['Apache-2.0']
        labels = ['gradle', 'nexus', 'sonatype', 'binary', 'repository', 'publish', 'upload', 'pom', 'maven']
        publicDownloadNumbers = true

        version {
            vcsTag = "v$project.version"
            attributes = ['gradle-plugin': "com.bmuschko.nexus:${project.group}:${project.name}"]

            gpg {
                sign = true
                passphrase = project.hasProperty('gpgPassphrase') ? project.getProperty('gpgPassphrase') : null
            }
        }
    }
}